#include <stdio.h>
#include <iostream>
#include <cmath>
#include <conio.h>
#include "MyLib.h";
using namespace std;

/*Series2. Даны десять вещественных чисел. Найти их произведение.*/

int Series_2()
{
	setlocale(LC_ALL, "Russian");
	cout << "Series2. Даны десять вещественных чисел. Найти их произведение.\n";
	float a, pr = 1;
	for (int i = 1; i <= 10; i++) {
		cin >> a;
		pr = pr * a;
	}
	cout << "Произведение = " << pr << endl;
	return 0;
}

/*Series13. Дан набор ненулевых целых чисел; признак его завершения — число 0. Вывести сумму всех положительных четных чисел из данного набора. Если требуемые числа в наборе отсутствуют, то вывести 0.*/

int Series_13()
{
	int a, sum = 0, n;
	setlocale(LC_ALL, "Russian");
	cout << "Series13. Дан набор ненулевых целых чисел; признак его завершения — число 0. Вывести сумму всех положительных четных чисел из данного набора. Если требуемые числа в наборе отсутствуют, то вывести 0.\n";
	cout << "Количество чисел = ";
	cin >> n;
	for (int i = 1; i <= n; i++) {
		cin >> a;
		while (a != 0) {
			if (a > 0 && a % 2 == 0) {
				sum += a;
			}
		}
		if (a == 0) {
			continue;
		}
	}
	cout << "Cуммa всех положительных четных чисел из данного набора = " << sum << endl;
	return 0;
}

/*Series21. Дано целое число N (>1) и набор из N вещественных чисел. Проверить, образует ли данный набор возрастающую последовательность. Если образует, то вывести True, если нет — вывести False.*/

int Series_21()
{
	setlocale(LC_ALL, "Russian");
	cout << "Series21. Дано целое число N (>1) и набор из N вещественных чисел. Проверить, образует ли данный набор возрастающую последовательность. Если образует, то вывести True, если нет — вывести False.\n";
	int n, rez = 1;
	float r, r1;
	cout << "Введите N: ";
	cin >> n;
	cin >> r1;
	for (int i = 1; i <= n; ++i, r1 == r) {
		cin >> r;
		if ((r1 > r) && (i != 1)) rez = 0;
	}
	if (rez == 0)cout << "False\n";
	else cout << "True\n";
	return 0;
}

/*Series23. Дано целое число () и набор из вещественных чисел. Набор называется пилообразным, если каждый его внутренний элемент либо больше, либо меньше обоих своих соседей (то есть является «зубцом»). Если данный набор является пилообразным, то вывести 0; в противном случае вывести номер первого элемента, не являющегося зубцом.*/

int Series_23()
{
	setlocale(LC_ALL, "Russian");
	cout << "Series23. Дано целое число N (>2) и набор из N вещественных чисел. Набор называется пилообразным, если каждый его внутренний элемент либо больше,\nлибо меньше обоих своих соседей (то есть является «зубцом»).\nЕсли данный набор является пилообразным, то вывести 0; в противном случае вывести номер первого элемента, не являющегося зубцом.\n";
	int n;
	cout << "N = ";
	cin >> n;
	int i, rez = 0, b = 1;
	float r, r1, r2;
	cin >> r1;
	cin >> r2;
	for (i = 1; i <= n - 2; ++i, r1 = r2, r2 = r) {
		cin >> r;
		if (!((r2 < r1) && (r1 > r)) && !((r2 > r1) && (r1 < r)) && b) {rez = i + 2; b = 0; }
	}
	cout << rez << endl;
	return 0;
}
