#include <stdio.h>
#include <iostream>

using namespace std;

bool IsCap(char t) {
	if (t >= 65 && t <= 90)return true;
	return false;
}

bool IsSml(char t) {
	if (t >= 97 && t <= 122)return true;
	return false;
}

int main()
{
	cout << "Enter your string:\n";
	char* text = new char[256];
	int count = 0, curIter = 0, iterI = 0, I = 0;
	char temp = '\0';
	char** words = new char* [256];
	for (int i = 0; i < 256; ++i) {
		words[i] = new char[256];
	}
	char** words1 = new char* [256];
	for (int i = 0; i < 256; ++i) {
		words1[i] = new char[256];
	}
	int j = 0;
	cin.getline(text, 256);
	for (int i = 0; text[i - 1] != '\0'; i++)
	{
		if (temp == '\0' && text[i] != ' ')
		{
			curIter = i;
			temp = text[i];
		}

		if (text[i + 1] == ' ' || text[i + 1] == '\0')
		{
			if (curIter <= i && temp != '\0')
			{
				for (int j = curIter, g = 0; j <= i; j++)
				{
					words[iterI][g++] = text[j];
				}
				iterI++;
			}
			temp = '\0';
		}
	}
	for (int i = 0; text[i - 1] != '\0'; i++)
	{
		if (temp == '\0' && text[i] != ' ')
		{
			curIter = i;
			temp = text[i];
		}

		if (text[i + 1] == ' ' || text[i + 1] == '\0')
		{
			if (curIter <= i && temp != '\0')
			{
				for (int j = curIter, g = 0; j <= i; j++)
				{
					words1[I][g++] = text[j];
				}
				I++;
			}
			temp = '\0';
		}
	}
	cout << endl;
	cout << "Words: \n";
	for (int i = 0; i < iterI; i++)
	{
		for (int k = 0; words[i][k] > 0; k++)
			cout << words[i][k];
		cout << endl;
	}
	cout << endl;

	int* countletters = new int[iterI];
	for (int i = 0; i < iterI; ++i) {
		countletters[i] = 0;
	}
	for (int i = 0; i < iterI; ++i) {
		for (int k = 0; words[i][k] > 0; k++) {
			countletters[i]++;
		}
	}

	cout << "How many letters in every word:\n";
	for (int i = 0; i < iterI; ++i) {
		cout << i + 1 << "---->" << countletters[i] << endl;
	}

	
	cout << endl;
	cout << "Which order do you prefer?\n";
	cout << "1----->from smallest to biggest word.\n";
	cout << "2----->from biggest to smallest word.\n";
	cout << endl;
	int choose;
	do cin >> choose; while (choose < 1 || choose>2);
	switch (choose) {
	case 1: {cout << "Text from smallest to biggest word: \n";
		for (int i = 0; i < iterI; ++i) {
			for (int j = i; j < iterI; ++j) {
				if (countletters[j] < countletters[i]) {
					char* temp = new char[256];
					for (int k = 0; k < countletters[i]; ++k) {
						temp[k] = words[i][k];
					}
					for (int k = 0; k < countletters[i]; ++k) {
						words[i][k] = ' ';
					}
					for (int k = 0; k < countletters[j]; ++k) {
						words[i][k] = words[j][k];
					}
					words[i][countletters[j]] = '\0';
					for (int k = 0; k < countletters[i]; ++k) {
						words[j][k] = temp[k];
					}
					int t = countletters[i];
					countletters[i] = countletters[j];
					countletters[j] = t;
					delete[] temp;
				}
			}
		}
		for (int i = 0; i < iterI; i++)
		{
			for (int k = 0; words[i][k] > 0; k++)
				cout << words[i][k];
			cout << " ";
		}
		cout << endl; }; break;
	case 2: {cout << "Text from smallest to biggest word: \n";
		for (int i = 0; i < iterI; ++i) {
			for (int j = i; j < iterI; ++j) {
				if (countletters[j] > countletters[i]) {
					char* temp = new char[256];
					for (int k = 0; k < countletters[i]; ++k) {
						temp[k] = words[i][k];
					}
					for (int k = 0; k < countletters[i]; ++k) {
						words[i][k] = ' ';
					}
					for (int k = 0; k < countletters[j]; ++k) {
						words[i][k] = words[j][k];
					}
					words[i][countletters[j]] = '\0';
					for (int k = 0; k < countletters[i]; ++k) {
						words[j][k] = temp[k];
					}
					int t = countletters[i];
					countletters[i] = countletters[j];
					countletters[j] = t;
					delete[] temp;
				}
			}
		}
		for (int i = 0; i < iterI; i++)
		{
			for (int k = 0; words[i][k] > 0; k++)
				cout << words[i][k];
			cout << " ";
		}
		cout << endl;}; break;
	}
	


	for (int i = 0; i < I; ++i) {
		for (int j = i; j < I; ++j) {
			if (words1[j][0] < words1[i][0]) {
				char* temp = new char[256];
				for (int k = 0; k < countletters[i]; ++k) {
					temp[k] = words1[i][k];
				}
				for (int k = 0; k < countletters[i]; ++k) {
					words1[i][k] = ' ';
				}
				for (int k = 0; k < countletters[j]; ++k) {
					words1[i][k] = words1[j][k];
				}
				words1[i][countletters[j]] = '\0';
				for (int k = 0; k < countletters[i]; ++k) {
					words1[j][k] = temp[k];
				}
				int t = countletters[i];
				countletters[i] = countletters[j];
				countletters[j] = t;
				delete[] temp;
			}
			if (words1[j][0] == words1[i][0] && words1[j][1] < words1[i][1]) {
				char* temp = new char[256];
				for (int k = 0; k < countletters[i]; ++k) {
					temp[k] = words1[i][k];
				}
				for (int k = 0; k < countletters[i]; ++k) {
					words1[i][k] = ' ';
				}
				for (int k = 0; k < countletters[j]; ++k) {
					words1[i][k] = words1[j][k];
				}
				words1[i][countletters[j]] = '\0';
				for (int k = 0; k < countletters[i]; ++k) {
					words1[j][k] = temp[k];
				}
				int t = countletters[i];
				countletters[i] = countletters[j];
				countletters[j] = t;
				delete[] temp;
			}
			if (words1[j][0] == words1[i][0] && words1[j][1] == words1[i][1] && words1[j][2] < words1[i][2]) {
				char* temp = new char[256];
				for (int k = 0; k < countletters[i]; ++k) {
					temp[k] = words1[i][k];
				}
				for (int k = 0; k < countletters[i]; ++k) {
					words1[i][k] = ' ';
				}
				for (int k = 0; k < countletters[j]; ++k) {
					words1[i][k] = words1[j][k];
				}
				words1[i][countletters[j]] = '\0';
				for (int k = 0; k < countletters[i]; ++k) {
					words1[j][k] = temp[k];
				}
				int t = countletters[i];
				countletters[i] = countletters[j];
				countletters[j] = t;
				delete[] temp;
			}
			if (words1[j][0] == words1[i][0] && words1[j][1] == words1[i][1] && words1[j][2] == words1[i][2] && words1[j][3] < words1[i][2]) {
				char* temp = new char[256];
				for (int k = 0; k < countletters[i]; ++k) {
					temp[k] = words1[i][k];
				}
				for (int k = 0; k < countletters[i]; ++k) {
					words1[i][k] = ' ';
				}
				for (int k = 0; k < countletters[j]; ++k) {
					words1[i][k] = words1[j][k];
				}
				words1[i][countletters[j]] = '\0';
				for (int k = 0; k < countletters[i]; ++k) {
					words1[j][k] = temp[k];
				}
				int t = countletters[i];
				countletters[i] = countletters[j];
				countletters[j] = t;
				delete[] temp;
			}
		}
	}
	cout << "Words in alphabetical order: \n";
	for (int i = 0; i < I; i++)
	{
		for (int k = 0; words1[i][k] > 0; k++)
			cout << words1[i][k];
		cout << " ";
	}
	cout << endl;
	delete[] text;
	for (int i = 0; i < iterI; ++i) delete[] words[i];
	for (int i = 0; i < iterI; ++i) delete[] words1[i];
	delete[] words;
	delete[] words1;
	delete[] countletters;
	return 0;
}
