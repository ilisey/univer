#include <iostream>
#include <stdio.h>

using namespace std;

/*int strlen(char s[]) {
	int i = -1;
	while (s[++i] != '\0');
	return i - 1;
}*/

/*bool StrEql(char s1[], char s2[]) {
	if (strlen(s1) != strlen(s2))return false;
	for (int i = 0; i < strlen(s1);++i) {
		if (s1[i] != s2[i])return false;
	}
	return true;
}*/

void DgtAlphCounter(char* s)
{
	int digitcount = 0, alphacount = 0;
	for (int i = 0; i < strlen(s); ++i) {
		if (isalpha(s[i]))alphacount++;
		if (isdigit(s[i]))digitcount++;
	}
	cout << "There are " << digitcount << " digits in this string.\n";
	cout << "There are " << alphacount << " letters in this string.\n";
}

void SmlrWrds(char* s)
{
	char temp = '\0';
	int count = 0, curIter = 0, iterI = 0;

	char** matrix = new char* [1000];
	for (int i = 0; i < 1000; i++)
		matrix[i] = new char[1000];

	for (int i = 0; s[i - 1] != '\0'; i++)
	{
		if (temp == '\0' && s[i] != ' ')
		{
			curIter = i;
			temp = s[i];
		}

		if (s[i + 1] == ' ' || s[i + 1] == '\0')
		{
			if (curIter < i && temp != '\0')
			{
				for (int j = curIter, g = 0; j <= i; j++)
				{
					matrix[iterI][g++] = s[j];
				}
				iterI++;
			}
			temp = '\0';
		}
	}

	bool flag = false;
	for (int j = 0; j < iterI; j++)
	{
		for (int q = 0; q < iterI; q++)
		{
			for (int g = 0; matrix[j][g - 1] > 0 || g == 0; g++)
			{
				if (matrix[j][g] < 0 && j != q)
				{
					flag = true;
					break;
				}

				if (matrix[j][g] != matrix[q][g])
					break;
			}
			if (flag) break;
		}
		if (flag) break;
	}

	if (flag) cout << "Yes, some words in text are equal" << endl;
	else cout << "No, there are no equal words in text" << endl;
	for (int i = 0; i < 1000; ++i) delete[] matrix[i];
	delete[] matrix;
}

void WordCounter(char* s)
{
	int count = 0;
	for (int i = 0; i < strlen(s); ++i) {
		if (isalpha(s[i]) && isspace(s[i + 1]))count++;
	}
	if (isspace(s[strlen(s)-1])==0)count++;
	cout << "There are " << count << " words.\n";
}

int main()
{
	cout << "There is a string.\n";
	cout << "Enter the string:\n";
	char* s = new char[1000];
	cin.getline(s, 1000);
	WordCounter(s);
	DgtAlphCounter(s);	
	cout << "Are there any equal words?\n";
	SmlrWrds(s);
	delete[] s;
	return 0;
}
